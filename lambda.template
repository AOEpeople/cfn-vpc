{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "AWS Lambda baked custom resource for CloudFormation for create NAT Services",
  "Parameters": {
    "S3Bucket": {
      "Description": "S3 bucket containing the zipped lambda function",
      "Type": "String"
    },
    "S3Key": {
      "Description": "S3 bucket key of the zipped lambda function",
      "Type": "String"
    }
  },
  "Resources": {
    "NatGatewayManagerRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": ["lambda.amazonaws.com"]
              },
              "Action": ["sts:AssumeRole"]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "root",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": "arn:aws:logs:*:*:*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "ec2:DescribeNatGateways",
                    "ec2:DeleteRoute",
                    "ec2:ReplaceRoute",
                    "ec2:CreateRoute",
                    "ec2:DeleteNatGateway",
                    "ec2:CreateNatGateway"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "NatGatewayManagerFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Description": "Lambda function for using nat gateways with CloudFormation",
        "Code": {
          "S3Bucket": {"Ref": "S3Bucket"},
          "S3Key": {"Ref": "S3Key"}
        },
        "Handler": "nat_gateway.handler",
        "Runtime": "nodejs",
        "Timeout": "240",
        "Role": {"Fn::GetAtt": ["NatGatewayManagerRole", "Arn"]}
      }
    }
  },
  "Outputs": {
    "NatGatewayManagerArn": {
      "Description": "NAT Gateway Manager Lambda Function ARN",
      "Value": {"Fn::GetAtt": ["NatGatewayManagerFunction", "Arn"]}
    }
  }
}